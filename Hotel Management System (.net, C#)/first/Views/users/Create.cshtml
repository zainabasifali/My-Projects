@model first.Models.user

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container">
    <h2>Create User</h2>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="mb-3 row">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "col-md-2 col-form-label fw-semibold" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control rounded" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "col-md-2 col-form-label fw-semibold" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control rounded", type = "email" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "col-md-2 col-form-label fw-semibold" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control rounded", type = "password" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "col-md-2 col-form-label fw-semibold" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.role,
                    new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Admin", Value = "Admin" },
                        new SelectListItem { Text = "Guest", Value = "Guest" },
                        new SelectListItem { Text = "Staff", Value = "Housekeeper" }
                    },
                    "Select Role",
                    new { @class = "form-select rounded" })
                @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3 row">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btnColor rounded" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary rounded ms-2" })
                </div>
            </div>
            }
        </div>